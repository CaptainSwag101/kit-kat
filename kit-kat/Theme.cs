// LICENCE: This file is NOT to be used ANYWHERE! This cannot be shared, modified or used without my consent! Want to use it? Ask me on twitter: @initPRAGMA
// Created with HUGE <3 by initPRAGMA.

using kit_kat.Properties;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Text;
using System.Linq;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using static Helpers;

#region Helpers
static internal class Helpers
{

    #region ColorFromHex
    public static Color ColorFromHex(string Hex)
    {
        return Color.FromArgb(Convert.ToInt32(long.Parse(string.Format("FFFFFFFFFF{0}", Hex.Substring(1)), System.Globalization.NumberStyles.HexNumber)));
    }
    #endregion
    #region ColorContrast
    public static Color ColorContrast(Color color__1)
    {
        
        double a = 1 - (0.299 * color__1.R + 0.587 * color__1.G + 0.114 * color__1.B) / 255;

        if (a < 0.5)
        {
            return Color.White;
        }
        else
        {
            return Color.Black;
        }

    }
    #endregion
    #region GetTabIcon
    public static Image GetTabIcon(int i)
    {
        if (i == 0)
        {
            return new Bitmap(Image.FromStream(new System.IO.MemoryStream(Convert.FromBase64String("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"))), 24, 24);
        }
        else if (i == 1)
        {
            return new Bitmap(Image.FromStream(new System.IO.MemoryStream(Convert.FromBase64String(""))), 24, 24);
        }
        else if (i == 2)
        {
            return new Bitmap(Image.FromStream(new System.IO.MemoryStream(Convert.FromBase64String("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"))), 24, 24);
        }
        else if (i == 3)
        {
            return new Bitmap(Image.FromStream(new System.IO.MemoryStream(Convert.FromBase64String(""))), 24, 24);
        }
        else
        {
            return new Bitmap(Image.FromStream(new System.IO.MemoryStream(Convert.FromBase64String(""))), 24, 24);
        }
    }
    #endregion
    #region RoundRect
    public enum RoundingStyle : byte
    {
        All = 0,
        Top = 1,
        Bottom = 2,
        Left = 3,
        Right = 4,
        TopRight = 5,
        BottomRight = 6
    }
    public static GraphicsPath RoundRect(Rectangle Rect, int Rounding, RoundingStyle Style = RoundingStyle.All)
    {

        GraphicsPath GP = new GraphicsPath();
        int AW = Rounding * 2;

        GP.StartFigure();

        if (Rounding == 0)
        {
            GP.AddRectangle(Rect);
            GP.CloseAllFigures();
            return GP;
        }

        switch (Style)
        {
            case RoundingStyle.All:
                GP.AddArc(new Rectangle(Rect.X, Rect.Y, AW, AW), -180, 90);
                GP.AddArc(new Rectangle(Rect.Width - AW + Rect.X, Rect.Y, AW, AW), -90, 90);
                GP.AddArc(new Rectangle(Rect.Width - AW + Rect.X, Rect.Height - AW + Rect.Y, AW, AW), 0, 90);
                GP.AddArc(new Rectangle(Rect.X, Rect.Height - AW + Rect.Y, AW, AW), 90, 90);
                break;
            case RoundingStyle.Top:
                GP.AddArc(new Rectangle(Rect.X, Rect.Y, AW, AW), -180, 90);
                GP.AddArc(new Rectangle(Rect.Width - AW + Rect.X, Rect.Y, AW, AW), -90, 90);
                GP.AddLine(new Point(Rect.X + Rect.Width, Rect.Y + Rect.Height), new Point(Rect.X, Rect.Y + Rect.Height));
                break;
            case RoundingStyle.Bottom:
                GP.AddLine(new Point(Rect.X, Rect.Y), new Point(Rect.X + Rect.Width, Rect.Y));
                GP.AddArc(new Rectangle(Rect.Width - AW + Rect.X, Rect.Height - AW + Rect.Y, AW, AW), 0, 90);
                GP.AddArc(new Rectangle(Rect.X, Rect.Height - AW + Rect.Y, AW, AW), 90, 90);
                break;
            case RoundingStyle.Left:
                GP.AddArc(new Rectangle(Rect.X, Rect.Y, AW, AW), -180, 90);
                GP.AddLine(new Point(Rect.X + Rect.Width, Rect.Y), new Point(Rect.X + Rect.Width, Rect.Y + Rect.Height));
                GP.AddArc(new Rectangle(Rect.X, Rect.Height - AW + Rect.Y, AW, AW), 90, 90);
                break;
            case RoundingStyle.Right:
                GP.AddLine(new Point(Rect.X, Rect.Y + Rect.Height), new Point(Rect.X, Rect.Y));
                GP.AddArc(new Rectangle(Rect.Width - AW + Rect.X, Rect.Y, AW, AW), -90, 90);
                GP.AddArc(new Rectangle(Rect.Width - AW + Rect.X, Rect.Height - AW + Rect.Y, AW, AW), 0, 90);
                break;
            case RoundingStyle.TopRight:
                GP.AddLine(new Point(Rect.X, Rect.Y + 1), new Point(Rect.X, Rect.Y));
                GP.AddArc(new Rectangle(Rect.Width - AW + Rect.X, Rect.Y, AW, AW), -90, 90);
                GP.AddLine(new Point(Rect.X + Rect.Width, Rect.Y + Rect.Height - 1), new Point(Rect.X + Rect.Width, Rect.Y + Rect.Height));
                GP.AddLine(new Point(Rect.X + 1, Rect.Y + Rect.Height), new Point(Rect.X, Rect.Y + Rect.Height));
                break;
            case RoundingStyle.BottomRight:
                GP.AddLine(new Point(Rect.X, Rect.Y + 1), new Point(Rect.X, Rect.Y));
                GP.AddLine(new Point(Rect.X + Rect.Width - 1, Rect.Y), new Point(Rect.X + Rect.Width, Rect.Y));
                GP.AddArc(new Rectangle(Rect.Width - AW + Rect.X, Rect.Height - AW + Rect.Y, AW, AW), 0, 90);
                GP.AddLine(new Point(Rect.X + 1, Rect.Y + Rect.Height), new Point(Rect.X, Rect.Y + Rect.Height));
                break;
        }

        GP.CloseAllFigures();

        return GP;

    }
    #endregion
    #region LoadFont
    [DllImport("gdi32.dll")]
    private static extern IntPtr AddFontMemResourceEx(IntPtr pbFont, uint cbFont, IntPtr pvd, [In] ref uint pcFonts);
    private static readonly PrivateFontCollection privateFontCollection = new PrivateFontCollection();
    public static FontFamily LoadFont(byte[] fontResource)
    {
        int dataLength = fontResource.Length;
        IntPtr fontPtr = Marshal.AllocCoTaskMem(dataLength);
        Marshal.Copy(fontResource, 0, fontPtr, dataLength);

        uint cFonts = 0;
        AddFontMemResourceEx(fontPtr, (uint)fontResource.Length, IntPtr.Zero, ref cFonts);
        privateFontCollection.AddMemoryFont(fontPtr, dataLength);

        return privateFontCollection.Families.Last();
    }
    #endregion

}
#endregion

namespace kit_kat
{
    
    #region ControlBox

    class ControlBox : Control
    {

        //Variables;
        public MouseState s;
        Bitmap minbmp = new Bitmap(68, 29);
        Bitmap closebmp = new Bitmap(68, 29);
        dynamic x = -1000; //Mouse X-Position;
        public int l = 2; //Mouse Hover State;

        //Default Settings;
        public ControlBox()
        {

            //Graphical Style Settings;
            SetStyle((ControlStyles)139270 | ControlStyles.ResizeRedraw | ControlStyles.AllPaintingInWmPaint | ControlStyles.OptimizedDoubleBuffer | ControlStyles.UserPaint | ControlStyles.SupportsTransparentBackColor, true);
            Graphics MeasureGraphics = default(Graphics);
            MeasureGraphics = Graphics.FromImage(new Bitmap(1, 1));
            dynamic DrawRadialPath = new GraphicsPath();

            //Default Settings;
            DoubleBuffered = true;
            Anchor = AnchorStyles.Top | AnchorStyles.Right;
            Width = 68;
            Height = 29;
            Font = new Font("Verdana", 8);
            
        }
        
        //Make sure it's always above everything;
        protected override sealed void OnHandleCreated(EventArgs e)
        {
            
            //Make sure it's ALWAYS above everything;
            BringToFront();

            //Raise flag;
            base.OnHandleCreated(e);

        }

        //Render the Icon BMP's;
        protected override void OnCreateControl()
        {

            //Raise flag;
            base.OnCreateControl();

            //Set the Graphics Variable;
            Graphics G = default(Graphics);

            #region Minimize Icon

            //Make a Graphics Variable from the Minimize BMP;
            G = Graphics.FromImage(minbmp);

            //Quality Settings;
            G.CompositingQuality = CompositingQuality.HighQuality;
            G.InterpolationMode = InterpolationMode.HighQualityBicubic;

            //Draw the Dropshadow into the BMP;
            G.DrawLine(new Pen(Color.FromArgb(68, Color.Black)), 11, 20, 21, 20);
            G.DrawLine(new Pen(Color.FromArgb(40, Color.Black)), 11, 17, 21, 17);

            //Draw the Icon into the BMP;
            G.DrawLine(new Pen(Color.White), 11, 18, 21, 18);
            G.DrawLine(new Pen(Color.White), 11, 19, 21, 19);

            #endregion
            #region Close Icon

            //Convert Base64PNG to a BMP;
            Bitmap icon = new Bitmap(Image.FromStream(new System.IO.MemoryStream(Convert.FromBase64String(""))), 13, 13);

            #region Dropshadow

            //Create a new BMP for the Dropshadow
            Bitmap ds = new Bitmap(23, 23);

            //Make a Graphics Variable from the DropShadow BMP;
            G = Graphics.FromImage(ds);

            //Quality Settings;
            G.CompositingQuality = CompositingQuality.HighQuality;
            G.InterpolationMode = InterpolationMode.HighQualityBicubic;

            #region Draw Dropshadow into the BMP
            G.FillRectangle(new SolidBrush(Color.FromArgb(16, Color.Black)), 2, 0, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(16, Color.Black)), 1, 1, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(16, Color.Black)), 9, 1, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(16, Color.Black)), 10, 0, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(16, Color.Black)), 11, 1, 1, 1);

            G.FillRectangle(new SolidBrush(Color.FromArgb(14, Color.Black)), 4, 2, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(14, Color.Black)), 5, 3, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(14, Color.Black)), 6, 4, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(14, Color.Black)), 7, 3, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(14, Color.Black)), 8, 2, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(14, Color.Black)), 3, 10, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(14, Color.Black)), 9, 10, 1, 1);

            G.FillRectangle(new SolidBrush(Color.FromArgb(12, Color.Black)), 2, 8, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(12, Color.Black)), 1, 9, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(12, Color.Black)), 0, 10, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(12, Color.Black)), 10, 8, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(12, Color.Black)), 11, 9, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(12, Color.Black)), 12, 10, 1, 1);

            G.FillRectangle(new SolidBrush(Color.FromArgb(38, Color.Black)), 1, 11, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(38, Color.Black)), 2, 12, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(38, Color.Black)), 3, 11, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(38, Color.Black)), 9, 11, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(38, Color.Black)), 10, 12, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(38, Color.Black)), 11, 11, 1, 1);

            G.FillRectangle(new SolidBrush(Color.FromArgb(40, Color.Black)), 6, 8, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(40, Color.Black)), 5, 9, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(40, Color.Black)), 4, 10, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(40, Color.Black)), 7, 9, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(40, Color.Black)), 8, 10, 1, 1);

            G.FillRectangle(new SolidBrush(Color.FromArgb(46, Color.Black)), 0, 2, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(46, Color.Black)), 1, 3, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(46, Color.Black)), 12, 2, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(46, Color.Black)), 11, 3, 1, 1);

            G.FillRectangle(new SolidBrush(Color.FromArgb(44, Color.Black)), 2, 4, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(44, Color.Black)), 3, 5, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(44, Color.Black)), 10, 4, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(44, Color.Black)), 9, 5, 1, 1);

            G.FillRectangle(new SolidBrush(Color.FromArgb(36, Color.Black)), 4, 6, 1, 1);
            G.FillRectangle(new SolidBrush(Color.FromArgb(36, Color.Black)), 8, 6, 1, 1);
            #endregion

            #endregion

            //Make a Graphics Variable from the Close BMP;
            G = Graphics.FromImage(closebmp);

            //Quality Settings;
            G.CompositingQuality = CompositingQuality.HighQuality;
            G.InterpolationMode = InterpolationMode.HighQualityBicubic;

            //Draw the Icon and DropShadow BMP's into the main Close BMP;
            G.DrawImageUnscaled(icon, 10, 8); //Icon;
            G.DrawImageUnscaled(ds, 10, 8); //Dropshadow;

            #endregion

        }

        //Draw the Control;
        protected override sealed void OnPaint(PaintEventArgs e)
        {

            //Set the Variable G to e.Graphics;
            Graphics G = e.Graphics;

            //Draw the Controls BackColor;
            G.Clear(BackColor);

            //Set the Quality;
            G.SmoothingMode = SmoothingMode.Default;
            G.CompositingQuality = CompositingQuality.AssumeLinear;
            G.InterpolationMode = InterpolationMode.HighQualityBicubic;

            #region Calculate OnHover/OnClick

            //Variables;
            int cb = 0; //Colorbyte;
            Color hc = default(Color); //Hovercolor;

            //Mouse State;
            switch (State)
            {

                //If it's Hovering Over;
                case MouseState.Over:

                    if (l == 1) //Close;
                    {
                        cb = 255;
                        hc = Color.Red;
                    }
                    else //Everything else;
                    {
                        cb = 45;
                        hc = Color.Black;
                    }

                    break; //Exit Switch;

                //If the left mouse button is clicked;
                case MouseState.Down:

                    //Set the Colorbyte;
                    cb = 35;
                    
                    if (l == 1) //Close;
                    {
                        hc = Color.Red;
                        //Close;
                    }
                    else //Everything else;
                    {
                        hc = Color.Black;
                    }

                    break; //Exit Switch;

            }

            #endregion

            //Draw the Rectangle;
            G.FillRectangle(new SolidBrush(Color.FromArgb(cb, hc)), x, 0, 34, Height);

            //Draw the Icons;
            G.DrawImageUnscaled(minbmp, 0, 0); //Minimize;
            G.DrawImageUnscaled(closebmp, 35, 0); //Close;

        }
        
        #region "Calculate Mouse State"

        //Variable to Store wether the Mouse is In Position or not;
        private bool InPosition;
        protected MouseState State;
        public enum MouseState : byte
        {
            None = 0,
            Over = 1,
            Down = 2,
            Block = 3
        }

        private void SetState(MouseState e)
        {
            State = e;
            //Set the State;
            Invalidate();
            //Redraw;
        }

        #region "Mouse Action Flags"

        #region "Move"

        protected override void OnMouseMove(MouseEventArgs e)
        {
            base.OnMouseMove(e);
            s = MouseState.Over;
            if (e.X >= 0 & e.X <= 34) //Minimize;
            {
                l = 0;
                x = 0;
            }
            else if (e.X >= 35) //Close;
            {
                l = 1;
                x = 34;
            }
            else //Fallback;
            {
                l = 2;
                x = -1000;
            }
            Invalidate();
        }

        #endregion
        #region "Down/Up"

        protected override void OnMouseDown(MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left)
                SetState(MouseState.Down);
            base.OnMouseDown(e);
        }

        protected override void OnMouseUp(MouseEventArgs e)
        {
            if (InPosition)
                SetState(MouseState.Over);
            base.OnMouseUp(e);
        }

        #endregion
        #region "Enter/Leave"

        protected override void OnMouseEnter(EventArgs e)
        {
            InPosition = true;
            SetState(MouseState.Over);
            base.OnMouseEnter(e);
        }
        protected override void OnMouseLeave(EventArgs e)
        {
            InPosition = false;
            SetState(MouseState.None);
            base.OnMouseLeave(e);
        }

        #endregion
        #region "EnabledChanged"

        protected override void OnEnabledChanged(EventArgs e)
        {
            if (Enabled)
                SetState(MouseState.None);
            else
                SetState(MouseState.Block);
            base.OnEnabledChanged(e);
        }

        #endregion

        #endregion

        #endregion
        #region "Button Click Actions"

        protected override void OnClick(EventArgs e)
        {
            base.OnClick(e);
            s = MouseState.Down;
            switch (l)
            {
                case 0:
                    //Minimize;
                    FindForm().WindowState = FormWindowState.Minimized;
                    break;
                case 1:
                    //Close;
                    FindForm().Close();
                    break;
                default:
                    break;
            }
        }

        #endregion

    }

    #endregion
    #region Material Button

    class MaterialButton : Button
    {

        //Variables;
        private Graphics G;

        //Default Properties;
        public MaterialButton()
        {
            Cursor = Cursors.Hand;
            Height = 34;
            Width = 150;
            ForeColor = Settings.Default.FontColor;
            Font = new Font("Kozuka Gothic Pro M", 9.5f);
            if (ReferenceEquals(Tag, "Alert"))
            {
                BackColor = Settings.Default.AlertColor;
            }
            else if (ReferenceEquals(Tag, "White"))
            {
                BackColor = Color.White;
            }
            else
            {
                BackColor = Settings.Default.HighlightColor;
            }
            DoubleBuffered = true;
        }

        #region Enabled Property
        public new bool Enabled
        {
            get { return base.Enabled; }
            set
            {
                base.Enabled = value;
                if (base.Enabled == true)
                {
                    if (ReferenceEquals(Tag, "Alert"))
                    {
                        BackColor = Settings.Default.AlertColor;
                    }
                    else if (ReferenceEquals(Tag, "White"))
                    {
                        BackColor = Color.White;
                    }
                    else
                    {
                        BackColor = Settings.Default.HighlightColor;
                    }
                    //Normal;
                    ForeColor = Properties.Settings.Default.FontColor;
                }
                else
                {
                    BackColor = Properties.Settings.Default.DisabledColor;
                    //Disabled;
                    ForeColor = Color.FromArgb(55, Properties.Settings.Default.FontColor);
                }
                Invalidate();
            }
        }
        #endregion
        #region MouseDown/Up
        protected override void OnMouseDown(MouseEventArgs e)
        {
            base.OnMouseDown(e);
            if (base.Enabled == true)
            {
                if (ReferenceEquals(Tag, "Alert"))
                {
                    BackColor = Settings.Default.AlertColor;
                }
                else if (ReferenceEquals(Tag, "White"))
                {
                    BackColor = Color.White;
                }
                else
                {
                    BackColor = Settings.Default.HighlightColor;
                }
            }
        }
        protected override void OnMouseUp(MouseEventArgs e)
        {
            base.OnMouseUp(e);
            if (base.Enabled == true)
            {
                if (ReferenceEquals(Tag, "Alert"))
                {
                    BackColor = Color.FromArgb(230, Settings.Default.AlertColor);
                }
                else if (ReferenceEquals(Tag, "White"))
                {
                    BackColor = Color.FromArgb(230, Color.White);
                }
                else
                {
                    BackColor = Color.FromArgb(230, Settings.Default.HighlightColor);
                }
            }
        }
        #endregion
        #region MouseEnter/Leave
        protected override void OnMouseEnter(EventArgs e)
        {
            base.OnMouseEnter(e);
            if (base.Enabled == true)
            {
                if (ReferenceEquals(Tag, "Alert"))
                {
                    BackColor = Color.FromArgb(230, Settings.Default.AlertColor);
                }
                else if (ReferenceEquals(Tag, "White"))
                {
                    BackColor = Color.FromArgb(230, Color.White);
                }
                else
                {
                    BackColor = Color.FromArgb(230, Settings.Default.HighlightColor);
                }
            }
        }
        protected override void OnMouseLeave(EventArgs e)
        {
            base.OnMouseLeave(e);
            if (base.Enabled == true)
            {
                if (ReferenceEquals(Tag, "Alert"))
                {
                    BackColor = Settings.Default.AlertColor;
                }
                else if (ReferenceEquals(Tag, "White"))
                {
                    BackColor = Color.White;
                }
                else
                {
                    BackColor = Settings.Default.HighlightColor;
                }
            }
        }
        #endregion
        #region Paint

        protected override void OnPaint(PaintEventArgs e)
        {
            //Link e.Graphics to a Variable;
            G = e.Graphics;

            //Set Render Quality;
            G.SmoothingMode = (SmoothingMode)2;
            G.InterpolationMode = (InterpolationMode)7;
            G.TextRenderingHint = TextRenderingHint.AntiAlias;

            //Set the BackColor;
            G.Clear(BackColor);

            //If there is an Image tied to the Button;

            if ((BackgroundImage != null))
            {
                //Set the Default X/Y/W/H values;
                int IX = DisplayRectangle.X;
                int IY = DisplayRectangle.Y;
                int IWidth = DisplayRectangle.Width;
                int IHeight = DisplayRectangle.Height;

                //Calculate Padding;
                if (!(Padding.All == 0))
                {
                    IX = Convert.ToInt32(DisplayRectangle.X + Padding.Left / 2);
                    IY = Convert.ToInt32(DisplayRectangle.Y + Padding.Top / 2);
                    IWidth = DisplayRectangle.Width - Padding.Right;
                    IHeight = DisplayRectangle.Height - Padding.Bottom;
                }

                //Render the Image;
                G.DrawImage(BackgroundImage, IX, IY, IWidth, IHeight);

            }

            //Draw the Text and make it MiddleCenter;
            StringFormat sf = new StringFormat();
            sf.LineAlignment = StringAlignment.Center;
            sf.Alignment = StringAlignment.Center;
            G.DrawString(Text, new Font(LoadFont(Resources.Roboto_Medium), 10f), new SolidBrush(ForeColor), DisplayRectangle, sf);

        }
        #endregion

    }

    #endregion
    #region Label

    class CustomLabel : Label
    {

        //Variables;
        private Graphics G;

        //Default Properties;
        public CustomLabel()
        {
            ForeColor = Settings.Default.FontColor;
            AutoSize = false;
        }

        #region Paint
        protected override void OnPaint(PaintEventArgs e)
        {
            //Link e.Graphics to a Variable;
            G = e.Graphics;

            //Set Render Quality;
            G.SmoothingMode = (SmoothingMode)2;
            G.InterpolationMode = (InterpolationMode)7;
            G.TextRenderingHint = TextRenderingHint.AntiAlias;

            //Set the BackColor;
            G.Clear(Parent.BackColor);

            //Draw the Text and make it MiddleCenter;
            StringFormat sf = new StringFormat();
            sf.LineAlignment = StringAlignment.Center;
            sf.Alignment = StringAlignment.Center;
            G.DrawString(Text, new Font(LoadFont(Resources.Roboto_Medium), Font.Size), new SolidBrush(ForeColor), DisplayRectangle, sf);

        }
        #endregion

    }

    #endregion
    #region CustomTabControl

    public class CustomTabControl : TabControl
    {
        
        #region Remove Padding
        protected override void WndProc(ref Message m)
        {
            if (m.Msg == 0x1300 + 40)
            {
                lparamrect rc = (lparamrect)m.GetLParam(typeof(lparamrect));
                rc.Left -= 4;
                rc.Right += 4;
                rc.Top -= 2;
                rc.Bottom += 4;
                Marshal.StructureToPtr(rc, m.LParam, true);
            }
            base.WndProc(ref m);
        }
        internal struct lparamrect
        {
            public int Left;
            public int Top;
            public int Right;
            public int Bottom;
        }
        #endregion

        //Variables;
        private Rectangle Rect;
        private int _OverIndex = -1;
        private int OverIndex
        {
            get { return _OverIndex; }
            set
            {
                _OverIndex = value;
                Invalidate();
            }
        }

        //Default Settings;
        public CustomTabControl()
        {
            DoubleBuffered = true;
            Alignment = TabAlignment.Left;
            SizeMode = TabSizeMode.Fixed;
            ItemSize = new Size(30, 32);
        }

        protected override void OnCreateControl()
        {
            base.OnCreateControl();
            SetStyle(ControlStyles.AllPaintingInWmPaint | ControlStyles.OptimizedDoubleBuffer | ControlStyles.ResizeRedraw | ControlStyles.UserPaint, true);
        }

        protected override void OnControlAdded(ControlEventArgs e)
        {
            base.OnControlAdded(e);
            e.Control.BackColor = ColorFromHex("#E5E5E5");
            e.Control.ForeColor = ColorFromHex("#FFFFFF");
            e.Control.Font = new Font("Kozuka Gothic Pro B", 9);
        }
        
        protected override void OnPaint(PaintEventArgs e)
        {

            //Set the Graphics Variable;
            Graphics G = e.Graphics;
            
            //Raise the Paint event;
            base.OnPaint(e);

            //Dynamically Darken the Parent's Color slightly;
            Color DarkParentColor = default(Color);
            if (ColorContrast(Parent.BackColor) == Color.White)
            {
                DarkParentColor = ControlPaint.Light(ControlPaint.Dark(Parent.BackColor, (float)0.01), (float)1.2);
            }
            else
            {
                DarkParentColor = ControlPaint.Light(ControlPaint.Dark(Parent.BackColor, (float)0.1), (float)0.35);
            }

            //Set the Tab's Background Color to the Darkened Parent's Color;
            G.Clear(DarkParentColor);

            //For Each Tab;
            for (int i = 0; i <= TabPages.Count - 1; i++)
            {

                if ((string)TabPages[i].Tag != "Hidden")
                {

                    //Get the Tab's Rectangle Size;
                    Rect = GetTabRect(i);

                    //If the user is hovering over the tab;
                    if (!(OverIndex == -1))
                    {
                        //Draw the Hover Background;
                        G.FillRectangle(new SolidBrush(Color.FromArgb(15, Color.Black)), new Rectangle(GetTabRect(OverIndex).X, GetTabRect(OverIndex).Y, GetTabRect(OverIndex).Width, GetTabRect(OverIndex).Height));


                    }
                    else if (!(SelectedIndex == i))
                    {
                        //Set the Background Color to the Darkened Parent's Color;
                        G.FillRectangle(new SolidBrush(DarkParentColor), new Rectangle(Rect.X, Rect.Y, Rect.Width + 7, Rect.Height));

                    }

                    //If its the Selected Tab;
                    if (SelectedIndex == i)
                    {
                        //Set the Selected Indicator to the Highlight Color;
                        G.FillRectangle(new SolidBrush(Properties.Settings.Default.HighlightColor), new Rectangle(Rect.X, Rect.Y + 8, 4, Rect.Height - 16));

                    }

                    float x = Convert.ToSingle((Rect.X + (Rect.Height - 10)) - (Rect.Height / 2));
                    float y = Convert.ToSingle((Rect.Y + (Rect.Height - 10)) - (Rect.Height / 2));

                    if ((!ReferenceEquals(Tag, "TextOnly")))
                    {
                        if (SelectedIndex == i)
                        {
                            G.DrawImage(GetTabIcon(i), new Rectangle(Convert.ToInt32(x) + 2, Convert.ToInt32(y), 20, 20));
                        }
                        else
                        {
                            G.DrawImage(GetTabIcon(i), new Rectangle(Convert.ToInt32(x), Convert.ToInt32(y), 20, 20));
                        }
                    }
                    else
                    {
                        dynamic TabProperties = TabPages[i];
                        StringFormat sf = new StringFormat();
                        sf.LineAlignment = StringAlignment.Center;
                        G.DrawString(TabProperties.Text, TabProperties.Font, new SolidBrush(TabProperties.ForeColor), x + 2, Convert.ToSingle(Rect.Y + (Rect.Height / 2)), sf);
                    }

                }

            }

        }

        protected override void OnSelecting(TabControlCancelEventArgs e)
        {
            base.OnSelecting(e);

            if ((e.TabPage != null))
            {
                if (!string.IsNullOrEmpty(Convert.ToString(e.TabPage.Tag)))
                {
                    e.Cancel = true;
                }
                else
                {
                    OverIndex = -1;
                }
            }

        }

        protected override void OnMouseMove(MouseEventArgs e)
        {
            base.OnMouseMove(e);

            for (int I = 0; I <= TabPages.Count - 1; I++)
            {
                if (GetTabRect(I).Contains(e.Location) & string.IsNullOrEmpty(Convert.ToString(TabPages[I].Tag)))
                {
                    OverIndex = I;
                    break; // TODO: might not be correct. Was : Exit For
                }
                else
                {
                    OverIndex = -1;
                }
            }

        }

        protected override void OnMouseLeave(EventArgs e)
        {
            base.OnMouseLeave(e);
            OverIndex = -1;
        }

    }

    #endregion
    #region Separator

    public class Separator : Control
    {

        //Default Properties;
        public Separator()
        {
            DoubleBuffered = true;
        }

        protected override void OnPaint(PaintEventArgs e)
        {

            //Setup Graphics;
            Graphics G = e.Graphics;
            G.SmoothingMode = SmoothingMode.HighQuality;
            G.TextRenderingHint = System.Drawing.Text.TextRenderingHint.ClearTypeGridFit;

            //Raise the OnPaint Flag;
            base.OnPaint(e);

            //Draw a 1 pixel line;
            using (Pen C = new Pen(ColorFromHex("#EBEBEC")))
            {
                G.DrawLine(C, new Point(0, 0), new Point(Width, 0));
            }

        }

        protected override void OnResize(EventArgs e)
        {

            //Raise the OnResize Flag;
            base.OnResize(e);

            //Make sure the size is always 2 pixels;
            Size = new Size(Width, 2);

        }

    }

    #endregion
    #region CustomCheckbox

    [DefaultEvent("CheckedChanged")]
    public class CustomCheckBox : Control
    {

        //Variables;
        public event CheckedChangedEventHandler CheckedChanged;
        public delegate void CheckedChangedEventHandler(object sender, EventArgs e);
        private bool _Checked;
        private bool _EnabledCalc;
        private Graphics G;
        private string B64Enabled = "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAA00lEQVQ4T6WTwQ2CMBSG30/07Ci6gY7gxZoIiYADuAIrsIDpQQ/cHMERZBOuXHimDSWALYL01EO/L//724JmLszk6S+BCOIExFsmL50sEH4kAZxVciYuJgnacD16Plpgg8tFtYMILntQdSXiZ3aXqa1UF/yUsoDw4wKglQaZZPa4RW3JEKzO4RjEbyJaN1BL8gvWgsMp3ADeq0lRJ2FimLZNYWpmFbudUJdolXTLyG2wTmDODUiccEfgSDIIfwmMxAMStS+XHPZn7l/z6Ifk+nSzBR8zi2d9JmVXSgAAAABJRU5ErkJggg==";

        private string B64Disabled = "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAA1UlEQVQ4T6WTzQ2CQBCF56EnLpaiXvUAJBRgB2oFtkALdEAJnoVEMIGzdEIFjNkFN4DLn+xpD/N9efMWQAsPFvL0lyBMUg8MiwzyZwuiJAuI6CyTMxezBC24EuSTBTp4xaaN6JWdqKQbge6udfB1pfbBjrMvEMZZAdCm3ilw7eO1KRmCxRyiOH0TsFUQs5KMwVLweKY7ALFKUZUTECD6qdquCxM7i9jNhLJEraQ5xZzrYJngO9crGYBbAm2SEfhHoCQGeeK+Ls1Ld+fuM0/+kPp+usWCD10idEOGa4QuAAAAAElFTkSuQmCC";
        //Default Properties;
        public CustomCheckBox()
        {
            DoubleBuffered = true;
            Enabled = true;
        }

        #region "Checked Property"
        public bool Checked
        {
            get { return _Checked; }
            set
            {
                _Checked = value;
                Invalidate();
            }
        }
        #endregion
        #region "Enabled Property"
        public new bool Enabled
        {
            get { return EnabledCalc; }
            set
            {
                _EnabledCalc = value;
                if (Enabled)
                {
                    Cursor = Cursors.Hand;
                }
                else
                {
                    Cursor = Cursors.Default;
                }
                Invalidate();
            }
        }

        [DisplayName("Enabled")]
        public bool EnabledCalc
        {
            get { return _EnabledCalc; }
            set
            {
                Enabled = value;
                Invalidate();
            }
        }
        #endregion
        #region "OnMouseUp"
        protected override void OnMouseUp(MouseEventArgs e)
        {
            base.OnMouseUp(e);
            if (Enabled)
            {
                Checked = !Checked;
                if (CheckedChanged != null)
                {
                    CheckedChanged(this, e);
                }
            }
        }
        #endregion
        #region "OnResize"
        protected override void OnResize(EventArgs e)
        {
            base.OnResize(e);
            Size = new Size(Width, 18);
        }
        #endregion

        #region "OnPaint"

        protected override void OnPaint(PaintEventArgs e)
        {
            //Set the Graphics Variable and Graphical Settings;
            G = e.Graphics;
            G.SmoothingMode = SmoothingMode.HighQuality;
            G.TextRenderingHint = System.Drawing.Text.TextRenderingHint.ClearTypeGridFit;

            //Raise the Paint event;
            base.OnPaint(e);

            //Set the Background Color to the Parent Control's BackColor;
            G.Clear(Parent.BackColor);

            //If the CheckBox is Enabled;

            if (Enabled)
            {
                //Draw the CheckBox and Text;
                using (SolidBrush Background = new SolidBrush(ColorFromHex("#F3F4F7")))
                {
                    using (Pen Border = new Pen(ColorFromHex("#D0D5D9")))
                    {
                        using (SolidBrush TextColor = new SolidBrush(Color.Black))
                        {
                            using (Font TextFont = new Font("Segoe UI", 9))
                            {
                                G.FillPath(Background, RoundRect(new Rectangle(0, 0, 16, 16), 3));
                                G.DrawPath(Border, RoundRect(new Rectangle(0, 0, 16, 16), 3));
                                G.DrawString(Text, TextFont, TextColor, new Point(25, 0));
                            }
                        }
                    }
                }

                //If the CheckBox is Checked;

                if (Checked)
                {
                    //Draw the CheckMark over the CheckBox;
                    using (Image I = Image.FromStream(new System.IO.MemoryStream(Convert.FromBase64String(B64Enabled))))
                    {
                        G.DrawImage(I, new Rectangle(3, 3, 11, 11));
                    }

                }


            }
            else
            {
                //Draw the CheckBox and Text;
                using (SolidBrush Background = new SolidBrush(ColorFromHex("#F5F5F8")))
                {
                    using (Pen Border = new Pen(ColorFromHex("#E1E1E2")))
                    {
                        using (SolidBrush TextColor = new SolidBrush(Color.Gray))
                        {
                            using (Font TextFont = new Font("Segoe UI", 9))
                            {
                                G.FillPath(Background, RoundRect(new Rectangle(0, 0, 16, 16), 3));
                                G.DrawPath(Border, RoundRect(new Rectangle(0, 0, 16, 16), 3));
                                G.DrawString(Text, TextFont, TextColor, new Point(25, 0));
                            }
                        }
                    }
                }

                //If the CheckBox is Checked;

                if (Checked)
                {
                    //Draw the CheckMark over the CheckBox;
                    using (Image I = Image.FromStream(new System.IO.MemoryStream(Convert.FromBase64String(B64Disabled))))
                    {
                        G.DrawImage(I, new Rectangle(3, 3, 11, 11));
                    }

                }

            }

        }
        #endregion

    }

    #endregion

}
